status = debug
name=Log4j2PropertiesConfig
property.basePath = /tmp/
property.application = cadastrapp
#property.dbUser = 
#property.dbPassword = 
#property.dbConnectionString = jdbc:postgresql://127.0.0.1:5432/logs

appenders = rolling, audit
#appenders = rolling, audit, dbBP, dbRP, dbDEM, dbEXP

appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${basePath}${application}.log
appender.rolling.filePattern = ${basePath}${application}-backup-%d{yyyy-MM-dd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d %-5p [%c] %X{uri} - $${ctx:sec-username:-nouser} - $${ctx:sec-roles:-norole} - $${ctx:sec-org:-noorg} - %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 20

appender.audit.type = File
appender.audit.name = AuditFile
appender.audit.fileName = ${basePath}${application}-audit.log
appender.audit.layout.type = PatternLayout
appender.audit.layout.pattern = %d %-5p [%c] %X{uri} - $${ctx:sec-username:-nouser} - $${ctx:sec-roles:-norole} - $${ctx:sec-org:-noorg} - %m%n

#appender.dbBP.type = Jdbc
#appender.dbBP.name = databaseBPAppender
#appender.dbBP.connectionSource.type = DriverManager
#appender.dbBP.connectionSource.driverClassName = org.postgresql.Driver
#appender.dbBP.connectionSource.connectionString = ${dbConnectionString}
#appender.dbBP.connectionSource.username = ${dbUser}
#appender.dbBP.connectionSource.password = ${dbPassword}
#appender.dbBP.tableName = cadastrapp_bp
#appender.dbBP.filter.regex.type = RegexFilter
#appender.dbBP.filter.regex.regex = Bordereau Parcellaire - .*
#appender.dbBP.filter.regex.useRawMsg = true
#appender.dbBP.filter.regex.onMatch = ACCEPT
#appender.dbBP.columnConfigs[0].type = Column
#appender.dbBP.columnConfigs[0].name = username
#appender.dbBP.columnConfigs[0].pattern = $${ctx:sec-username:-nouser}
#appender.dbBP.columnConfigs[0].isUnicode =false
#appender.dbBP.columnConfigs[1].type = Column
#appender.dbBP.columnConfigs[1].name = log_date
#appender.dbBP.columnConfigs[1].isEventTimestamp = true
#appender.dbBP.columnConfigs[2].type = Column
#appender.dbBP.columnConfigs[2].name = uri
#appender.dbBP.columnConfigs[2].pattern = %X{uri}
#appender.dbBP.columnConfigs[2].isUnicode =false
#appender.dbBP.columnConfigs[3].type = Column
#appender.dbBP.columnConfigs[3].name = organisation
#appender.dbBP.columnConfigs[3].pattern = $${ctx:sec-org:-noorg}
#appender.dbBP.columnConfigs[3].isUnicode =false
#appender.dbBP.columnConfigs[4].type = Column
#appender.dbBP.columnConfigs[4].name = roles
#appender.dbBP.columnConfigs[4].pattern = $${ctx:sec-roles:-norole}
#appender.dbBP.columnConfigs[4].isUnicode =false
#appender.dbBP.columnConfigs[5].type = Column
#appender.dbBP.columnConfigs[5].name = message
#appender.dbBP.columnConfigs[5].pattern = %m
#appender.dbBP.columnConfigs[5].isUnicode =false

#appender.dbRP.type = Jdbc
#appender.dbRP.name = databaseRPAppender
#appender.dbRP.connectionSource.type = DriverManager
#appender.dbRP.connectionSource.driverClassName = org.postgresql.Driver
#appender.dbRP.connectionSource.connectionString = ${dbConnectionString}
#appender.dbRP.connectionSource.username = ${dbUser}
#appender.dbRP.connectionSource.password = ${dbPassword}
#appender.dbRP.tableName = cadastrapp_rp
#appender.dbRP.filter.regex.type = RegexFilter
#appender.dbRP.filter.regex.regex = Releve de propriete - .*
#appender.dbRP.filter.regex.useRawMsg = true
#appender.dbRP.filter.regex.onMatch = ACCEPT
#appender.dbRP.columnConfigs[0].type = Column
#appender.dbRP.columnConfigs[0].name = username
#appender.dbRP.columnConfigs[0].pattern = $${ctx:sec-username:-nouser}
#appender.dbRP.columnConfigs[0].isUnicode =false
#appender.dbRP.columnConfigs[1].type = Column
#appender.dbRP.columnConfigs[1].name = log_date
#appender.dbRP.columnConfigs[1].isEventTimestamp = true
#appender.dbRP.columnConfigs[2].type = Column
#appender.dbRP.columnConfigs[2].name = uri
#appender.dbRP.columnConfigs[2].pattern = %X{uri}
#appender.dbRP.columnConfigs[2].isUnicode =false
#appender.dbRP.columnConfigs[3].type = Column
#appender.dbRP.columnConfigs[3].name = organisation
#appender.dbRP.columnConfigs[3].pattern = $${ctx:sec-org:-noorg}
#appender.dbRP.columnConfigs[3].isUnicode =false
#appender.dbRP.columnConfigs[4].type = Column
#appender.dbRP.columnConfigs[4].name = roles
#appender.dbRP.columnConfigs[4].pattern = $${ctx:sec-roles:-norole}
#appender.dbRP.columnConfigs[4].isUnicode =false
#appender.dbRP.columnConfigs[5].type = Column
#appender.dbRP.columnConfigs[5].name = message
#appender.dbRP.columnConfigs[5].pattern = %m
#appender.dbRP.columnConfigs[5].isUnicode =false
#
#appender.dbDEM.type = Jdbc
#appender.dbDEM.name = databaseDemandeAppender
#appender.dbDEM.connectionSource.type = DriverManager
#appender.dbDEM.connectionSource.driverClassName = org.postgresql.Driver
#appender.dbDEM.connectionSource.connectionString = ${dbConnectionString}
#appender.dbDEM.connectionSource.username = ${dbUser}
#appender.dbDEM.connectionSource.password = ${dbPassword}
#appender.dbDEM.tableName = cadastrapp_demande
#appender.dbDEM.filter.regex.type = RegexFilter
#appender.dbDEM.filter.regex.regex = Demmande - .*
#appender.dbDEM.filter.regex.useRawMsg = true
#appender.dbDEM.filter.regex.onMatch = ACCEPT
#appender.dbDEM.columnConfigs[0].type = Column
#appender.dbDEM.columnConfigs[0].name = username
#appender.dbDEM.columnConfigs[0].pattern = $${ctx:sec-username:-nouser}
#appender.dbDEM.columnConfigs[0].isUnicode =false
#appender.dbDEM.columnConfigs[1].type = Column
#appender.dbDEM.columnConfigs[1].name = log_date
#appender.dbDEM.columnConfigs[1].isEventTimestamp = true
#appender.dbDEM.columnConfigs[2].type = Column
#appender.dbDEM.columnConfigs[2].name = uri
#appender.dbDEM.columnConfigs[2].pattern = %X{uri}
#appender.dbDEM.columnConfigs[2].isUnicode =false
#appender.dbDEM.columnConfigs[3].type = Column
#appender.dbDEM.columnConfigs[3].name = organisation
#appender.dbDEM.columnConfigs[3].pattern = $${ctx:sec-org:-noorg}
#appender.dbDEM.columnConfigs[3].isUnicode =false
#appender.dbDEM.columnConfigs[4].type = Column
#appender.dbDEM.columnConfigs[4].name = roles
#appender.dbDEM.columnConfigs[4].pattern = $${ctx:sec-roles:-norole}
#appender.dbDEM.columnConfigs[4].isUnicode =false
#appender.dbDEM.columnConfigs[5].type = Column
#appender.dbDEM.columnConfigs[5].name = message
#appender.dbDEM.columnConfigs[5].pattern = %m
#appender.dbDEM.columnConfigs[5].isUnicode =false
#
#appender.dbEXP.type = Jdbc
#appender.dbEXP.name = databaseExportAppender
#appender.dbEXP.connectionSource.type = DriverManager
#appender.dbEXP.connectionSource.driverClassName = org.postgresql.Driver
#appender.dbEXP.connectionSource.connectionString = ${dbConnectionString}
#appender.dbEXP.connectionSource.username = ${dbUser}
#appender.dbEXP.connectionSource.password = ${dbPassword}
#appender.dbEXP.tableName = cadastrapp_export
#appender.dbEXP.filter.regex.type = RegexFilter
#appender.dbEXP.filter.regex.regex = Export CSV - .*
#appender.dbEXP.filter.regex.useRawMsg = true
#appender.dbEXP.filter.regex.onMatch = ACCEPT
#appender.dbEXP.columnConfigs[0].type = Column
#appender.dbEXP.columnConfigs[0].name = username
#appender.dbEXP.columnConfigs[0].pattern = $${ctx:sec-username:-nouser}
#appender.dbEXP.columnConfigs[0].isUnicode =false
#appender.dbEXP.columnConfigs[1].type = Column
#appender.dbEXP.columnConfigs[1].name = log_date
#appender.dbEXP.columnConfigs[1].isEventTimestamp = true
#appender.dbEXP.columnConfigs[2].type = Column
#appender.dbEXP.columnConfigs[2].name = uri
#appender.dbEXP.columnConfigs[2].pattern = %X{uri}
#appender.dbEXP.columnConfigs[2].isUnicode =false
#appender.dbEXP.columnConfigs[3].type = Column
#appender.dbEXP.columnConfigs[3].name = organisation
#appender.dbEXP.columnConfigs[3].pattern = $${ctx:sec-org:-noorg}
#appender.dbEXP.columnConfigs[3].isUnicode =false
#appender.dbEXP.columnConfigs[4].type = Column
#appender.dbEXP.columnConfigs[4].name = roles
#appender.dbEXP.columnConfigs[4].pattern = $${ctx:sec-roles:-norole}
#appender.dbEXP.columnConfigs[4].isUnicode =false
#appender.dbEXP.columnConfigs[5].type = Column
#appender.dbEXP.columnConfigs[5].name = message
#appender.dbEXP.columnConfigs[5].pattern = %m
#appender.dbEXP.columnConfigs[5].isUnicode =false

rootLogger.level = info
rootLogger.appenderRefs = rolling
rootLogger.appenderRef.rolling.ref = RollingFile

loggers = documents
logger.documents.name = org.georchestra.cadastrapp.loggers.documents
logger.documents.level = info
logger.documents.additivity = false
logger.documents.appenderRef.auditFile.ref = AuditFile
#logger.documents.appenderRef.dbBP.ref = databaseBPAppender
#logger.documents.appenderRef.dbRP.ref = databaseRPAppender
#logger.documents.appenderRef.dbDEM.ref = databaseDemandeAppender
#logger.documents.appenderRef.dbEXP.ref = databaseExportAppender